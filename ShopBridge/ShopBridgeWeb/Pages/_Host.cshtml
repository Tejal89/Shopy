@page "/"
@namespace ShopBridgeWeb.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ShopBridgeWeb</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    @*<script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
        crossorigin="anonymous"></script>*@
    <script>
        window.readURL = (input) => {
            if (input.files && input.files[0]) {

                var ProductName = document.getElementById("hdnImageName")
                ProductName.value = input.files[0].name;;
                var pNameEvent = new Event('change');
                ProductName.dispatchEvent(pNameEvent);

                var reader = new FileReader();

                reader.onload = function (e) {
                    var ImageFile = document.getElementById("filePreview");
                    ImageFile.src = e.target.result;
                    var ProductFile = document.getElementById("hdnImagePath");
                    ProductFile.value = atob(ImageFile.src).toString(); //canvas.toDataURL('image/jpeg');
                    var pPathEvent = new Event('change');
                    ProductFile.dispatchEvent(pPathEvent);
                    alert(ProductFile.value);
                }

                reader.readAsDataURL(input.files[0]); // convert to base64 string
            }
        }

        window.fileChange = () => {

            var fileUpload = document.getElementById("files"); //$("#files").get(0);
            
            readURL(fileUpload);
        };

        window.imgSrcChange = () => {
            
        }


    </script>
</head>
<body>
    <!-- Blazor overlay -->
    <div id="components-reconnect-modal"></div>

    <app>
        @(await Html.RenderComponentAsync<App>(RenderMode.ServerPrerendered))
        @*<component type="typeof(App)" render-mode="ServerPrerendered" />*@
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.server.js"></script>

</body>
</html>
